{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,0BAIMC,EAAa,QACbC,EAAUC,SAASC,cAAc,eACjCC,EAAaF,SAASC,cAAc,oBACpCE,EAAWH,SAASC,cAAc,kBAEpCG,EAAc,UAQlB,SAASC,EAAYC,GAEnB,IAAIC,EAAY,GAChB,OAFAH,EAAcE,GAGZ,IAAK,UACHC,EAAYX,EAAAY,kBAAkBC,aAC9B,MACF,IAAK,QACHF,EAAYX,EAAAY,kBAAkBE,WAGlC,IAAIC,EAAiBJ,EAAUK,KAAI,SAAAC,GAEjC,OADAA,EAAMC,aAAeD,EAAME,OAAOH,KAAI,SAAAI,G,OAASA,EAAMC,I,IAAMC,KAAK,OACzD,EAAAC,EAAAC,iBAAgBP,E,IAEzBd,EAAQsB,UAAYV,EAAeO,KAAK,G,CArB1CI,EAAAC,eAAeC,iBAAiB1B,GAAY,W,OAAMO,EAAYD,E,IAC9DkB,EAAAG,eAAeD,iBAAiB1B,GAAY,W,OAAMO,EAAYD,E,IAE9DF,EAAWsB,iBAAiB1B,GAAY,W,OAAMO,EAAY,U,IAC1DF,EAASqB,iBAAiB1B,GAAY,W,OAAMO,EAAY,Q,IAoBxDA,EAAYD,G,+DCzBNsB,EAAa,QACbC,EAAU3B,SAASC,cAAc,eACjC2B,EAAa5B,SAASC,cAAc,oBACpC4B,EAAW7B,SAASC,cAAc,kBAEpC6B,EAAc,UACdC,EAAqB,EACrBC,EAAwBhC,SAASC,cAAc,wBAC/CgC,EAAiBD,EAAsBE,SAAS,GAChDC,EAAiBH,EAAsBE,SAAS,GAuCpD,SAASE,IACPH,EAAeI,YAAczC,EAAAY,kBAAkB8B,cAC7CP,GAEE,sBACA,iBACJI,EAAeE,YAAczC,EAAAY,kBAAkB+B,YAAYR,GACvD,oBACA,c,CAGN,SAASS,EAAkBlC,GAEzB,IAAIC,EAAY,GAChB,OAFAuB,EAAcxB,GAGZ,IAAK,UACHC,EAAYX,EAAAY,kBAAkBC,aAC9B,MACF,IAAK,QACHF,EAAYX,EAAAY,kBAAkBE,WAGlC,IAAIC,EAAiBJ,EAAUK,KAAI,SAAAC,G,OAAS,EAAAM,EAAAC,iBAAgBP,E,IAC5Dc,EAAQN,UAAYV,EAAeO,KAAK,G,CA5D1CU,EAAWJ,iBAAiBE,GAAY,W,OAAMc,EAAkB,U,IAChEX,EAASL,iBAAiBE,GAAY,W,OAAMc,EAAkB,Q,IAE9Db,EAAQH,iBAAiBE,GAAY,SAAAe,GACnC,IAAIC,EAAeD,EAAME,KAAKC,WAAU,SAAAC,G,OAAwB,MAAnBA,EAAEC,QAAQC,K,KACnC,GAAhBL,IACFX,EAAqBU,EAAME,KAAKD,GAAcI,QAAQC,MACtDX,I,IAIJH,EAAeT,iBAAiBE,GAAY,SAAAe,GACtC7C,EAAAY,kBAAkB8B,cAAcP,GAClCnC,EAAAY,kBAAkBwC,cAAcjB,GAEhCkB,QAAQC,IAAI,mBAKdV,EAAkBV,GAClBM,G,IAGFD,EAAeX,iBAAiBE,GAAY,SAAAe,GACtC7C,EAAAY,kBAAkB+B,YAAYR,GAChCnC,EAAAY,kBAAkB2C,YAAYpB,GAE9BkB,QAAQC,IAAI,mBAKdV,EAAkBV,GAClBM,G,IA6BFI,EAAkBV,E","sources":["src/js/render/libraryRender.js","src/library.js"],"sourcesContent":["import { movieLocalStorage } from '../local-storage/local-storage.js';\nimport { buttonAddWatch, buttonAddQueue } from '../modal/modal-for-movie.js';\nimport { markupCardMovie } from './render.js';\n\nconst eventClick = 'click';\nconst gallery = document.querySelector('.gallery-js');\nconst watchedTab = document.querySelector('#lib-watched-tab');\nconst queueTab = document.querySelector('#lib-queue-tab');\n\nlet selectedTab = 'watched';\n\nbuttonAddWatch.addEventListener(eventClick, () => renderByTab(selectedTab));\nbuttonAddQueue.addEventListener(eventClick, () => renderByTab(selectedTab));\n\nwatchedTab.addEventListener(eventClick, () => renderByTab('watched'));\nqueueTab.addEventListener(eventClick, () => renderByTab('queue'));\n\nfunction renderByTab(key) {\n  selectedTab = key;\n  let movieList = [];\n  switch (selectedTab) {\n    case 'watched':\n      movieList = movieLocalStorage.watchedArray;\n      break;\n    case 'queue':\n      movieList = movieLocalStorage.queueArray;\n      break;\n  }\n  let moviesElements = movieList.map(movie => {\n    movie.stringGenres = movie.genres.map(genre => genre.name).join(', ');\n    return markupCardMovie(movie);\n  });\n  gallery.innerHTML = moviesElements.join('');\n}\n\nrenderByTab(selectedTab);\n","import './js/render/libraryRender';\n\nimport './js/modal/modal-for-movie';\n\nimport './js/modal/team-modal';\nimport onSwitch from './js/api/theme.js';\n\nimport { movieLocalStorage } from './js/local-storage/local-storage.js';\nimport { markupCardMovie } from './js/render/render.js';\n\nconst eventClick = 'click';\nconst gallery = document.querySelector('.gallery-js');\nconst watchedTab = document.querySelector('#lib-watched-tab');\nconst queueTab = document.querySelector('#lib-queue-tab');\n\nlet selectedTab = 'watched';\nlet selectedMovieIndex = 0;\nlet modalButtonsContainer = document.querySelector('.movie-btn-container');\nlet buttonAddWatch = modalButtonsContainer.children[0];\nlet buttonAddQueue = modalButtonsContainer.children[1];\n\nwatchedTab.addEventListener(eventClick, () => renderMoviesByTab('watched'));\nqueueTab.addEventListener(eventClick, () => renderMoviesByTab('queue'));\n\ngallery.addEventListener(eventClick, event => {\n  let elementIndex = event.path.findIndex(e => e.dataset.index != null);\n  if (elementIndex != -1) {\n    selectedMovieIndex = event.path[elementIndex].dataset.index;\n    redrawButtonText();\n  }\n});\n\nbuttonAddWatch.addEventListener(eventClick, event => {\n  if (movieLocalStorage.watchedExists(selectedMovieIndex)) {\n    movieLocalStorage.removeWatched(selectedMovieIndex);\n  } else {\n    console.log('TODO: add movie');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addWatched(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nbuttonAddQueue.addEventListener(eventClick, event => {\n  if (movieLocalStorage.queueExists(selectedMovieIndex)) {\n    movieLocalStorage.removeQueue(selectedMovieIndex);\n  } else {\n    console.log('TODO: add queue');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addQueue(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nfunction redrawButtonText() {\n  buttonAddWatch.textContent = movieLocalStorage.watchedExists(\n    selectedMovieIndex\n  )\n    ? 'remove from watched'\n    : 'add to watched';\n  buttonAddQueue.textContent = movieLocalStorage.queueExists(selectedMovieIndex)\n    ? 'remove from queue'\n    : 'add to queue';\n}\n\nfunction renderMoviesByTab(key) {\n  selectedTab = key;\n  let movieList = [];\n  switch (selectedTab) {\n    case 'watched':\n      movieList = movieLocalStorage.watchedArray;\n      break;\n    case 'queue':\n      movieList = movieLocalStorage.queueArray;\n      break;\n  }\n  let moviesElements = movieList.map(movie => markupCardMovie(movie));\n  gallery.innerHTML = moviesElements.join('');\n}\n\nrenderMoviesByTab(selectedTab);\n"],"names":["$74hJy","parcelRequire","$e55d5da0999eaf41$var$eventClick","$e55d5da0999eaf41$var$gallery","document","querySelector","$e55d5da0999eaf41$var$watchedTab","$e55d5da0999eaf41$var$queueTab","$e55d5da0999eaf41$var$selectedTab","$e55d5da0999eaf41$var$renderByTab","key","movieList","movieLocalStorage","watchedArray","queueArray","moviesElements","map","movie","stringGenres","genres","genre","name","join","$kIlwO","markupCardMovie","innerHTML","$dmTlY","buttonAddWatch","addEventListener","buttonAddQueue","$cecbdd76f2d3d4bd$var$eventClick","$cecbdd76f2d3d4bd$var$gallery","$cecbdd76f2d3d4bd$var$watchedTab","$cecbdd76f2d3d4bd$var$queueTab","$cecbdd76f2d3d4bd$var$selectedTab","$cecbdd76f2d3d4bd$var$selectedMovieIndex","$cecbdd76f2d3d4bd$var$modalButtonsContainer","$cecbdd76f2d3d4bd$var$buttonAddWatch","children","$cecbdd76f2d3d4bd$var$buttonAddQueue","$cecbdd76f2d3d4bd$var$redrawButtonText","textContent","watchedExists","queueExists","$cecbdd76f2d3d4bd$var$renderMoviesByTab","event","elementIndex","path","findIndex","e","dataset","index","removeWatched","console","log","removeQueue"],"version":3,"file":"library.8dc0e4ce.js.map"}