{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,0BAIA,MACMC,EAAUC,SAASC,cAAc,eACjCC,EAAaF,SAASC,cAAc,oBACpCE,EAAWH,SAASC,cAAc,kBAExC,IAAIG,EAAc,UAQlB,SAASC,EAAYC,GACnBF,EAAcE,EACd,IAAIC,EAAY,GAChB,OAAQH,GACN,IAAK,UACHG,EAAYV,EAAAW,kBAAkBC,aAC9B,MACF,IAAK,QACHF,EAAYV,EAAAW,kBAAkBE,WAGlC,IAAIC,EAAiBJ,EAAUK,KAAIC,IACjCA,EAAMC,aAAeD,EAAME,OAAOH,KAAII,GAASA,EAAMC,OAAMC,KAAK,OACzD,EAAAC,EAAAC,iBAAgBP,MAEzBd,EAAQsB,UAAYV,EAAeO,KAAK,G,CArB1CI,EAAAC,eAAeC,iBAPI,SAOyB,IAAMnB,EAAYD,KAC9DkB,EAAAG,eAAeD,iBARI,SAQyB,IAAMnB,EAAYD,KAE9DF,EAAWsB,iBAVQ,SAUqB,IAAMnB,EAAY,aAC1DF,EAASqB,iBAXU,SAWmB,IAAMnB,EAAY,WAoBxDA,EAAYD,G,2DCzBZ,MACMsB,EAAU1B,SAASC,cAAc,eACjC0B,EAAa3B,SAASC,cAAc,oBACpC2B,EAAW5B,SAASC,cAAc,kBAExC,IAAI4B,EAAc,UACdC,EAAqB,EACrBC,EAAwB/B,SAASC,cAAc,wBAC/C+B,EAAiBD,EAAsBE,SAAS,GAChDC,EAAiBH,EAAsBE,SAAS,GAuCpD,SAASE,IACPH,EAAeI,YAAcvC,EAAAW,kBAAkB6B,cAC7CP,GAEE,sBACA,iBACJI,EAAeE,YAAcvC,EAAAW,kBAAkB8B,YAAYR,GACvD,oBACA,c,CAGN,SAASS,EAAkBjC,GACzBuB,EAAcvB,EACd,IAAIC,EAAY,GAChB,OAAQsB,GACN,IAAK,UACHtB,EAAYV,EAAAW,kBAAkBC,aAC9B,MACF,IAAK,QACHF,EAAYV,EAAAW,kBAAkBE,WAGlC,IAAIC,EAAiBJ,EAAUK,KAAIC,IAAS,EAAAM,EAAAC,iBAAgBP,KAC5Da,EAAQL,UAAYV,EAAeO,KAAK,G,CA5D1CS,EAAWH,iBAXQ,SAWqB,IAAMe,EAAkB,aAChEX,EAASJ,iBAZU,SAYmB,IAAMe,EAAkB,WAE9Db,EAAQF,iBAdW,SAckBgB,IACnC,IAAIC,EAAeD,EAAME,KAAKC,WAAUC,GAAwB,MAAnBA,EAAEC,QAAQC,SACnC,GAAhBL,IACFX,EAAqBU,EAAME,KAAKD,GAAcI,QAAQC,MACtDX,I,IAIJH,EAAeR,iBAtBI,SAsByBgB,IACtC3C,EAAAW,kBAAkB6B,cAAcP,GAClCjC,EAAAW,kBAAkBuC,cAAcjB,GAEhCkB,QAAQC,IAAI,mBAKdV,EAAkBV,GAClBM,GAAkB,IAGpBD,EAAeV,iBAnCI,SAmCyBgB,IACtC3C,EAAAW,kBAAkB8B,YAAYR,GAChCjC,EAAAW,kBAAkB0C,YAAYpB,GAE9BkB,QAAQC,IAAI,mBAKdV,EAAkBV,GAClBM,GAAkB,IA6BpBI,EAAkBV","sources":["src/js/render/libraryRender.js","src/library.js"],"sourcesContent":["import { movieLocalStorage } from '../local-storage/local-storage.js';\nimport { buttonAddWatch, buttonAddQueue } from '../modal/modal-for-movie.js';\nimport { markupCardMovie } from './render.js';\n\nconst eventClick = 'click';\nconst gallery = document.querySelector('.gallery-js');\nconst watchedTab = document.querySelector('#lib-watched-tab');\nconst queueTab = document.querySelector('#lib-queue-tab');\n\nlet selectedTab = 'watched';\n\nbuttonAddWatch.addEventListener(eventClick, () => renderByTab(selectedTab));\nbuttonAddQueue.addEventListener(eventClick, () => renderByTab(selectedTab));\n\nwatchedTab.addEventListener(eventClick, () => renderByTab('watched'));\nqueueTab.addEventListener(eventClick, () => renderByTab('queue'));\n\nfunction renderByTab(key) {\n  selectedTab = key;\n  let movieList = [];\n  switch (selectedTab) {\n    case 'watched':\n      movieList = movieLocalStorage.watchedArray;\n      break;\n    case 'queue':\n      movieList = movieLocalStorage.queueArray;\n      break;\n  }\n  let moviesElements = movieList.map(movie => {\n    movie.stringGenres = movie.genres.map(genre => genre.name).join(', ');\n    return markupCardMovie(movie);\n  });\n  gallery.innerHTML = moviesElements.join('');\n}\n\nrenderByTab(selectedTab);\n","import './js/render/libraryRender';\n\nimport './js/modal/modal-for-movie';\n\nimport './js/modal/team-modal';\nimport onSwitch from './js/api/theme.js';\n\nimport { movieLocalStorage } from './js/local-storage/local-storage.js';\nimport { markupCardMovie } from './js/render/render.js';\n\nconst eventClick = 'click';\nconst gallery = document.querySelector('.gallery-js');\nconst watchedTab = document.querySelector('#lib-watched-tab');\nconst queueTab = document.querySelector('#lib-queue-tab');\n\nlet selectedTab = 'watched';\nlet selectedMovieIndex = 0;\nlet modalButtonsContainer = document.querySelector('.movie-btn-container');\nlet buttonAddWatch = modalButtonsContainer.children[0];\nlet buttonAddQueue = modalButtonsContainer.children[1];\n\nwatchedTab.addEventListener(eventClick, () => renderMoviesByTab('watched'));\nqueueTab.addEventListener(eventClick, () => renderMoviesByTab('queue'));\n\ngallery.addEventListener(eventClick, event => {\n  let elementIndex = event.path.findIndex(e => e.dataset.index != null);\n  if (elementIndex != -1) {\n    selectedMovieIndex = event.path[elementIndex].dataset.index;\n    redrawButtonText();\n  }\n});\n\nbuttonAddWatch.addEventListener(eventClick, event => {\n  if (movieLocalStorage.watchedExists(selectedMovieIndex)) {\n    movieLocalStorage.removeWatched(selectedMovieIndex);\n  } else {\n    console.log('TODO: add movie');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addWatched(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nbuttonAddQueue.addEventListener(eventClick, event => {\n  if (movieLocalStorage.queueExists(selectedMovieIndex)) {\n    movieLocalStorage.removeQueue(selectedMovieIndex);\n  } else {\n    console.log('TODO: add queue');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addQueue(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nfunction redrawButtonText() {\n  buttonAddWatch.textContent = movieLocalStorage.watchedExists(\n    selectedMovieIndex\n  )\n    ? 'remove from watched'\n    : 'add to watched';\n  buttonAddQueue.textContent = movieLocalStorage.queueExists(selectedMovieIndex)\n    ? 'remove from queue'\n    : 'add to queue';\n}\n\nfunction renderMoviesByTab(key) {\n  selectedTab = key;\n  let movieList = [];\n  switch (selectedTab) {\n    case 'watched':\n      movieList = movieLocalStorage.watchedArray;\n      break;\n    case 'queue':\n      movieList = movieLocalStorage.queueArray;\n      break;\n  }\n  let moviesElements = movieList.map(movie => markupCardMovie(movie));\n  gallery.innerHTML = moviesElements.join('');\n}\n\nrenderMoviesByTab(selectedTab);\n"],"names":["$hCcLB","parcelRequire","$909dbe3a9712e264$var$gallery","document","querySelector","$909dbe3a9712e264$var$watchedTab","$909dbe3a9712e264$var$queueTab","$909dbe3a9712e264$var$selectedTab","$909dbe3a9712e264$var$renderByTab","key","movieList","movieLocalStorage","watchedArray","queueArray","moviesElements","map","movie","stringGenres","genres","genre","name","join","$dqfwu","markupCardMovie","innerHTML","$g8T3J","buttonAddWatch","addEventListener","buttonAddQueue","$ce3726a01b8ab25a$var$gallery","$ce3726a01b8ab25a$var$watchedTab","$ce3726a01b8ab25a$var$queueTab","$ce3726a01b8ab25a$var$selectedTab","$ce3726a01b8ab25a$var$selectedMovieIndex","$ce3726a01b8ab25a$var$modalButtonsContainer","$ce3726a01b8ab25a$var$buttonAddWatch","children","$ce3726a01b8ab25a$var$buttonAddQueue","$ce3726a01b8ab25a$var$redrawButtonText","textContent","watchedExists","queueExists","$ce3726a01b8ab25a$var$renderMoviesByTab","event","elementIndex","path","findIndex","e","dataset","index","removeWatched","console","log","removeQueue"],"version":3,"file":"library.cc16cb3d.js.map"}