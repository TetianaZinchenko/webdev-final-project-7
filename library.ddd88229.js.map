{"mappings":"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","sources":["src/library.js","src/js/local-storage/local-storage.js"],"sourcesContent":["import './js/modal/team-modal';\nimport onSwitch from './js/api/theme.js';\n\nimport { movieLocalStorage } from './js/local-storage/local-storage.js';\nimport { markupCardForMovie } from './js/render/render.js';\n\nconst eventClick = 'click';\nconst gallery = document.querySelector('.gallery-js');\nconst watchedTab = document.querySelector('#lib-watched-tab');\nconst queueTab = document.querySelector('#lib-queue-tab');\n\nlet selectedTab = 'watched';\nlet selectedMovieIndex = 0;\nlet modalButtonsContainer = document.querySelector('.movie-btn-container');\nlet buttonAddWatch = modalButtonsContainer.children[0];\nlet buttonAddQueue = modalButtonsContainer.children[1];\n\nwatchedTab.addEventListener(eventClick, () => renderMoviesByTab('watched'));\nqueueTab.addEventListener(eventClick, () => renderMoviesByTab('queue'));\n\ngallery.addEventListener(eventClick, event => {\n  let elementIndex = event.path.findIndex(e => e.dataset.index != null);\n  if (elementIndex != -1) {\n    selectedMovieIndex = event.path[elementIndex].dataset.index;\n    redrawButtonText();\n  }\n});\n\nbuttonAddWatch.addEventListener(eventClick, event => {\n  if (movieLocalStorage.watchedExists(selectedMovieIndex)) {\n    movieLocalStorage.removeWatched(selectedMovieIndex);\n  } else {\n    console.log('TODO: add movie');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addWatched(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nbuttonAddQueue.addEventListener(eventClick, event => {\n  if (movieLocalStorage.queueExists(selectedMovieIndex)) {\n    movieLocalStorage.removeQueue(selectedMovieIndex);\n  } else {\n    console.log('TODO: add queue');\n    // get movie info by index (selectedMovieIndex)\n    // let movie = globalMovieArray[index];\n    // movieLocalStorage.addQueue(movie);\n  }\n  renderMoviesByTab(selectedTab);\n  redrawButtonText();\n});\n\nfunction redrawButtonText() {\n  buttonAddWatch.textContent = movieLocalStorage.watchedExists(\n    selectedMovieIndex\n  )\n    ? 'remove from watched'\n    : 'add to watched';\n  buttonAddQueue.textContent = movieLocalStorage.queueExists(selectedMovieIndex)\n    ? 'remove from queue'\n    : 'add to queue';\n}\n\nfunction renderMoviesByTab(key) {\n  selectedTab = key;\n  let movieList = [];\n  switch (selectedTab) {\n    case 'watched':\n      movieList = movieLocalStorage.watchedArray;\n      break;\n    case 'queue':\n      movieList = movieLocalStorage.queueArray;\n      break;\n  }\n  let moviesElements = movieList.map(movie => markupCardForMovie(movie));\n  gallery.innerHTML = moviesElements.join('');\n}\n\nrenderMoviesByTab(selectedTab);\n","const localStorageWatchKey = \"movie-watched\";\nconst localQueueWatchKey = \"movie-queue\";\n\nexport let movieLocalStorage = {\n    watchedArray : localStorageLoad(localStorageWatchKey),\n    queueArray : localStorageLoad(localQueueWatchKey),\n    watchedExists : function(id) {\n        return this.indexById(this.watchedArray, id) != -1;\n    },\n    queueExists : function(id){\n        return this.indexById(this.queueArray, id) != -1;\n    },\n    indexById : function(array, id){\n        return array.findIndex(movie => movie.id == id);\n    },\n    addWatched : function(movie) {\n        if(!this.watchedExists(movie.id)){\n            this.watchedArray.push(movie);\n            localStorageSave(localStorageWatchKey, this.watchedArray);\n            return true;\n        }\n        return false;\n    },\n    removeWatched : function(id){\n        if(this.watchedExists(id)){\n            let index = this.indexById(this.watchedArray, id);\n            this.watchedArray.splice(index, 1);\n            localStorageSave(localStorageWatchKey, this.watchedArray);\n        }\n    },\n    addQueue : function(movie) {\n        if(!this.queueExists(movie.id)){\n            this.queueArray.push(movie);\n            localStorageSave(localQueueWatchKey, this.queueArray);\n            return true;\n        }\n        return false;\n    },\n    removeQueue : function(id){\n        if(this.queueExists(id)){\n            let index = this.indexById(this.queueArray, id);\n            this.queueArray.splice(index, 1);\n            localStorageSave(localQueueWatchKey, this.queueArray);\n        }\n    },\n};\n\nfunction localStorageLoad(key){\n    let movieListValue = localStorage.getItem(key);\n    let movieList = [];\n    if(movieListValue !== null){\n        movieList = JSON.parse(movieListValue);\n    }\n    return movieList;\n}\n\nfunction localStorageSave(key, value){\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\n"],"names":["parcelRequire","$5256a9b23e5a739f$var$localStorageWatchKey","$5256a9b23e5a739f$var$localQueueWatchKey","$5256a9b23e5a739f$export$3f760a7eb1ec64c4","watchedArray","$5256a9b23e5a739f$var$localStorageLoad","queueArray","watchedExists","id","this","indexById","queueExists","array","findIndex","movie","addWatched","push","$5256a9b23e5a739f$var$localStorageSave","removeWatched","index","splice","addQueue","removeQueue","key","movieListValue","localStorage","getItem","movieList","JSON","parse","value","setItem","stringify","$cecbdd76f2d3d4bd$var$eventClick","$cecbdd76f2d3d4bd$var$gallery","document","querySelector","$cecbdd76f2d3d4bd$var$watchedTab","$cecbdd76f2d3d4bd$var$queueTab","$cecbdd76f2d3d4bd$var$selectedTab","$cecbdd76f2d3d4bd$var$selectedMovieIndex","$cecbdd76f2d3d4bd$var$modalButtonsContainer","$cecbdd76f2d3d4bd$var$buttonAddWatch","children","$cecbdd76f2d3d4bd$var$buttonAddQueue","$cecbdd76f2d3d4bd$var$redrawButtonText","textContent","$cecbdd76f2d3d4bd$var$renderMoviesByTab","moviesElements","map","$kIlwO","markupCardForMovie","innerHTML","join","addEventListener","event","elementIndex","path","e","dataset","console","log"],"version":3,"file":"library.ddd88229.js.map"}